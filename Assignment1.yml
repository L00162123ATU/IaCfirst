---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  IaC Assignment1 Create Cloud formation stack for a small business mini network

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VPCCIDR
      - 
        Label: 
          default: "Tags"
        Parameters: 
          - ProjectName


Parameters:
  VPCId:
    Type: String

  ProjectName:
    Type: String
    Description: Enter project name
  
  InternetGatewayId:
    Type: String
    Default: InternetG 



Resources:
 

  # security group for F instance
  SecurityGroupPrivate1:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow traffic to J
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/24
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.0.0/24
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.0.0/24 
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.1.0/24
      Tags: 
        - Key : Project Name
          Value : !Ref ProjectName
      VpcId: 
        Fn::ImportValue: !Ref VPCId 
  # F instance
  ec2InstanceF:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-08c40ec9ead489470
      KeyName: DemoCloudForm
      SecurityGroupIds: [!Ref SecurityGroupPrivate1]
      SubnetId: !Ref PrivateSubnet1
      Tags:
        - Key : Project Name
          Value : !Ref ProjectName
        - Key : Name
          Value : Instance F           
 
  # A instance
  ec2InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0753877c9c4e0fdda
      KeyName: DemoCloudForm
      SecurityGroupIds: [!Ref SecurityGroupPrivate2]
      SubnetId: !Ref PrivateSubnet2
      Tags:
        - Key : Project Name
          Value : !Ref ProjectName
        - Key : Name
          Value : instance A

  # security group for A instance
  SecurityGroupPrivate2:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow traffic to A
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/24
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.0.0/24
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.0.0/24 
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 10.0.3.0/24
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 10.0.4.0/24
      Tags: 
        - Key : Project Name
          Value : !Ref ProjectName
      VpcId: 
        Fn::ImportValue: !Ref VPCId        
# D instance (database)
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSubnetGroupName: !Ref DBSubnet
      DBInstanceIdentifier: DemoDB
      VPCSecurityGroups:
        - !GetAtt DBEC2SecurityGroup.GroupId
      AllocatedStorage: "5"
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: sa
      MasterUserPassword: "12345678"
      Tags:
        - Key: Name
          Value: D
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
  # Database subnet group
  DBSubnet:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: DemoDBSubnetGroup
      DBSubnetGroupDescription: DemoDBSubnetGroup
      SubnetIds:
        - !Ref PrivateSubnet3
        - !Ref PrivateSubnet4
      Tags:
        - Key: Name
          Value: DemoDBSubnetGroup
  # D instance security group
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: 
        Fn::ImportValue: !Ref VPCId
      GroupName: DemoDBSesurityGroup
      GroupDescription: Allow postgres inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value: DemoDBSesurityGroup
  # security group for public
  SecurityGroupPublic:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
# allowing traffic to F
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.1.0/24
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.1.0/24
 # allowing traffic to A         
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.2.0/24
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.2.0/24
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.2.0/24
      Tags: 
        - Key : Project Name
          Value : !Ref ProjectName
      VpcId: 
        Fn::ImportValue: !Ref VPCId 
# J instance
  ec2InstanceJ:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-08c40ec9ead489470
      KeyName: DemoCloudForm
      SecurityGroupIds: [!Ref SecurityGroupPublic]
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key : Project Name
          Value : !Ref ProjectName
        - Key : Name
          Value : Instance J    











     
